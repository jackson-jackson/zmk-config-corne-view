/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 38 37 36 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        layer_2_ht: layer_2_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_2_HT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <17>;
            hold-trigger-on-release;
        };

        layer_1_ht: layer_1_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_1_HT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <18>;
            hold-trigger-on-release;
        };

        layer_3_ht: layer_3_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_3_HT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <5>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB   |  Q  |  W  |  F  |  P  |  B  |  --  |   J   |  L  |  U  |  Y  |  ;  | BKSP |
            // | CTRL  |  A  |  R  |  S  |  T  |  G  |  --  |   M   |  N  |  E  |  I  |  O  |  '   |
            // | ENTER |  X  |  C  |  D  |  V  |  Z  |  --  |   K   |  H  |  ,  |  .  |  /  | ESC  |
            //                | GUI | LWR | SK SHIFT |  --  |  RSE  |  SPACE  |  ALT  |

            bindings = <
&kp TAB  &kp Q  &kp W                &layer_3_ht 3 E  &kp R                &kp T              &kp Y            &kp U                 &layer_1_ht 1 I  &kp O         &kp P          &kp BSPC
&trans   &kp A  &hml LEFT_COMMAND S  &hml LEFT_ALT D  &hml LEFT_CONTROL F  &layer_1_ht 1 G    &hmr LEFT_ALT H  &hmr RIGHT_COMMAND J  &hmr RSHIFT K    &hmr RCTRL L  &kp SEMICOLON  &kp SQT
&kp RET  &kp Z  &kp X                &kp C            &layer_2_ht 2 V      &kp B              &kp N            &layer_2_ht 2 M       &kp COMMA        &kp DOT       &kp FSLH       &kp ESC
                                     &kp LEFT_ALT     &sk LSHIFT           &kp ENTER          &kp ENTER        &kp SPACE             &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB   |  1  |  2  |  3  |  4  |  5  |  --  |   6   |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |  --  |  LFT  | DWN |  UP | RGT |     |      |
            // | ENTER |     |     |     |     |     |  --  |       |     |     |     |     |      |
            //               | GUI | SK SHIFT  | LWR |  --  |  RSE  |   SPACE   | ALT |

            bindings = <
&kp TAB     &none         &trans        &trans        &trans        &trans          &trans  &trans     &kp UP    &trans     &trans  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &trans  &trans
&kp RET     &trans        &trans        &trans        &trans        &trans          &trans  &trans     &trans    &trans     &trans  &trans
                                        &none         &sk LSHIFT    &trans          &trans  &kp SPACE  &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB   |  !  |  @  |  #  |  $  |  %  |  --  |   ^   |   &   |   *   |   (   |   )   |  BKSP  |
            // | CTRL  |     |     |     |     |     |  --  |   -   |   =   |   [   |   ]   |   \   |    `   |
            // | ENTER |     |     |     |     |     |  --  |   _   |   +   |   {   |   }   |  "|"  |    ~   |
            //               | GUI |  SK SHIFT | LWR  |  -- |  RSE  |   SPACE   |  ALT  |

            bindings = <
&kp TAB    &kp EXCL  &kp AT      &kp HASH          &kp DLLR    &kp PRCNT            &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP      &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&kp RET    &trans    &trans      &trans            &trans      &kp C_VOLUME_DOWN    &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                                 &none             &sk LSHIFT  &trans               &trans     &kp SPACE  &none
            >;
        };

        numbers_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
